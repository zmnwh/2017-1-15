****************************************************************************************************************************************
				变量 的作用域
1.要理解闭包，首先必须理解JavaScript特殊的变量作用域。

变量的作用域分为两种：
	全局变量和局部变量。
在JavaScript中，函数内部可以直接读取全局变量。

函数外部自然无法读取函数内的局部变量；

注意：！！！！
	函数内部声明变量的时候，一定要使用var 命令。如果不用的话，实际上声明了一个全局变量！！！

****************************************************************************************************************************************
				如何从外部读取局部变量？
基于某些不确定因素，我们有时候需要得到函数内的局部变量，但是，正常情况下这是办不到的，只有通过变通的方法才能实现；
那就是：
	在函数的内部，再定义一个函数。
****************************************************************************************************************************************
				闭包的概念

个人理解：
	闭包就是能够读取其他函数内部变量的函数。由于在JavaScript中，只有函数内部的子函数才能读取局部变量，因此可以把闭包简单理解成“定义在一个函数内部的函数”。所以本质上，闭包就是将函数内部和函数外部链接起来的一座桥梁。

****************************************************************************************************************************************

			闭包的用途

闭包可以用在许多的地方，他的它的最大用处有两个，一个是前面提到的可以读取函数内部的变量，两一个就是让这些变量的值始终保持在内存中。

****************************************************************************************************************************************

				使用闭包的注意点，闭包的缺点
1.由于闭包会使得函数中的变量被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能会导致内存泄漏。解决方法是，在退出函数之前，将不适用的局部变量全部删除。

2.闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象使用，把闭包当做它的公用方法，把内部变量当做它的私有属性，这时一定要小心，不要随便改变父函数内部变量的值。


















	